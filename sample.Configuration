# This file has been edited by Fredrik Lindgren, a.k.a. Wisp,
# starting from 18 December 2012 and WeiDU 231.06.

# Autodetection:
# We try to auto-detect X86/Windows/Cygwin, X86/Linux and OSX10.4.
ifdef WINDIR
	# (0) X86 / Windows / Cygwin, using MINGW as the C compiler
	export ARCHOS    = x86_WIN32
	export OBJEXT    = o
	export ARCH_FILE = arch_mingw
	export CASE_FILE = case_ins_win
	export ARCH_C_FILES = createprocess_win32
	# Selects on the bitness of the Cygwin environment
	ifeq "$(shell uname -m)" "x86_64"
		export OCAMLDIR  = C:\\ocaml64\\bin
		export WEIDU_ARCH = amd64
		export ELKHOUND_BIN = elkhound64
        export WINDRES_BIN = x86_64-w64-mingw32-windres
	else
		export OCAMLDIR  = C:\\ocaml\\bin
		export WEIDU_ARCH = x86
		export ELKHOUND_BIN = elkhound
        export WINDRES_BIN = i686-w64-mingw32-windres
	endif
	export WEIDU_OS = win32
	PROJECT_CMODULES   = reg
	PROJECT2_CMODULES  = reg
	PROJECT3_CMODULES  = reg
	export GLOB      = glob_win32
	export USEOPT = .opt
else
	uname=$(shell uname)
	ifeq "$(uname)" "Linux"
		# (1) X86 / Linux, using GCC as the C Compiler
		export ARCHOS    = x86_LINUX
		export OCAMLDIR  = /usr/bin
		export OBJEXT    = o
		export ARCH_FILE = arch_unix
		export CASE_FILE = case_ins_linux
		export GLOB      = glob_unix
		# Very simplistic arch test
		# Does not account for e.g., PPC machines
		ifeq "$(shell uname -m)" "x86_64"
			export WEIDU_ARCH = amd64
		else
			export WEIDU_ARCH = x86
		endif
		export WEIDU_OS = unix
		export ELKHOUND_BIN = elkhound
		export USEOPT = .opt
		PROJECT_CMODULES = nix
	else
		ifeq "$(uname)" "Darwin"
			# (2) Mac OS X, using GCC as the C compiler
			export ARCHOS    = x86_LINUX
			export OCAMLDIR  = /usr/local/bin
			export OBJEXT    = o
			export CASE_FILE = case_ins_mac
			export GLOB      = glob_unix
			# Very simplistic arch test
			ifeq "$(shell uname -m)" "x86_64"
				export WEIDU_ARCH = amd64
				export ARCH_FILE = arch_osx
			else ifeq "$(shell uname -m)" "i386"
				export WEIDU_ARCH = x86
				export ARCH_FILE = arch_osx
			else
				export WEIDU_ARCH = mac # PPC
				export ARCH_FILE = arch_legacy_osx
			endif
			export WEIDU_OS = osx
			export ELKHOUND_BIN = elkhound
			export USEOPT = .opt
			PROJECT_CMODULES = nix
		endif
	endif
endif

ifeq ($(findstring stable,$(wildcard stable)), )
	export COMPILEFLAGS = -w y -ccopt -w -g
else
	export COMPILEFLAGS = -w y -ccopt -w
endif
